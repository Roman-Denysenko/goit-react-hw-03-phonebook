{"version":3,"sources":["components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","components/filter/Filter.module.css","App.module.css","components/contactForm/contactForm.js","components/contactList/contactList.js","components/filter/filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","contacts","name","number","handleInputName","e","target","value","setState","handleDeleteContactFromFormState","handleSubmitForm","preventDefault","contactItem","id","uuidv4","find","item","alert","props","onSubmitForm","resetInput","newContactsFromAppState","UpdateContacts","this","onSubmit","className","s","form","lable","input","type","onChange","button","Component","defaultProps","ContactList","items","onDeleteContact","length","map","onClick","Filter","filter","handleFilter","onFilter","App","handleTakeSubmitForm","data","handleFindContactsFromInput","handleDeleteContact","resultContacts","contactsFromLocalStorage","JSON","parse","localStorage","getItem","prevState","nextContacts","setItem","stringify","normalizedFilter","toLowerCase","visibleContacts","el","includes","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c658105d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__KI7qm\",\"input\":\"ContactForm_input__vvq2u\",\"lable\":\"ContactForm_lable__3NfDW\",\"button\":\"ContactForm_button__27cBg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__3O5S8\",\"item\":\"ContactList_item__3IYfL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lable\":\"Filter_lable__1dqO6\",\"input\":\"Filter_input__3R9N2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3QwRl\"};","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {};\n\n  static defaultProps = {};\n\n  state = {\n    contacts: [],\n    name: '',\n    number: '',\n  };\n\n  handleInputName = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n    this.handleDeleteContactFromFormState();\n  };\n\n  handleSubmitForm = e => {\n    e.preventDefault();\n    const { name, contacts, number } = this.state;\n    const contactItem = { id: uuidv4(), name, number };\n\n    if (name === '' || number === '') {\n      return;\n    }\n\n    if (contacts.find(item => item.name === name)) {\n      alert(`${name} is already is contact`);\n      return;\n    } else {\n      this.setState({\n        contacts: [...contacts, contactItem],\n      });\n    }\n\n    this.props.onSubmitForm([...contacts, contactItem]);\n    this.resetInput();\n  };\n\n  handleDeleteContactFromFormState = () => {\n    const newContactsFromAppState = this.props.UpdateContacts;\n    this.setState({ contacts: newContactsFromAppState });\n  };\n\n  resetInput = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmitForm} className={s.form}>\n        <label className={s.lable}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleInputName}\n          ></input>\n        </label>\n\n        <label className={s.lable}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleInputName}\n          ></input>\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ items, onDeleteContact }) => {\r\n  if (items.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const ContactItem = ({ id, name, number }) => {\r\n    if (name === '' || number === '') {\r\n      return null;\r\n    }\r\n    return (\r\n      <li key={id} className={s.item}>\r\n        {name}: {number}\r\n        <button\r\n          className={s.button}\r\n          type=\"button\"\r\n          id={id}\r\n          onClick={onDeleteContact}\r\n        >\r\n          Delete\r\n        </button>{' '}\r\n      </li>\r\n    );\r\n  };\r\n\r\n  return <ul>{items.map(ContactItem)}</ul>;\r\n};\r\n\r\nContactList.propTypes = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nclass Filter extends Component {\r\n  state = {\r\n    filter: '',\r\n  };\r\n\r\n  handleFilter = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n    this.props.onFilter(value);\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    return (\r\n      <>\r\n        <label className={s.lable}>\r\n          Find contact by name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={this.handleFilter}\r\n          ></input>\r\n        </label>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport s from './App.module.css';\n\nimport ContactForm from './components/contactForm';\nimport ContactList from './components/contactList';\nimport Filter from './components/filter';\n\nclass App extends Component {\n  static propTypes = {};\n\n  static defaultProps = {};\n\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contactsFromLocalStorage = JSON.parse(\n      localStorage.getItem('contacts'),\n    );\n\n    if (contactsFromLocalStorage) {\n      this.setState({ contacts: contactsFromLocalStorage });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (prevContacts !== nextContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  handleTakeSubmitForm = data => {\n    this.setState({ contacts: data });\n  };\n\n  handleFindContactsFromInput = data => {\n    this.setState({ filter: data });\n  };\n\n  handleDeleteContact = e => {\n    const { contacts } = this.state;\n    const { id } = e.target;\n    const resultContacts = contacts.filter(item => item.id !== id);\n    this.setState({\n      contacts: resultContacts,\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    const visibleContacts = contacts.filter(el =>\n      el.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <div className={s.container}>\n        <h1>Phonebook</h1>\n        <ContactForm\n          onSubmitForm={this.handleTakeSubmitForm}\n          UpdateContacts={contacts}\n        />\n\n        <h2>Contacts</h2>\n        <Filter onFilter={this.handleFindContactsFromInput} />\n        <ContactList\n          items={visibleContacts}\n          onDeleteContact={this.handleDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}